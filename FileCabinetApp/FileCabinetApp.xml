<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FileCabinetApp</name>
    </assembly>
    <members>
        <member name="T:FileCabinetApp.CommandHandlers.AppCommandRequest">
            <summary>
            Request from command line.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.AppCommandRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.AppCommandRequest"/> class.
            </summary>
            <param name="command">Command from command line.</param>
            <param name="parameters">Parameters from command line.</param>
        </member>
        <member name="P:FileCabinetApp.CommandHandlers.AppCommandRequest.Command">
            <summary>
            Gets command value.
            </summary>
            <value>Command value.</value>
        </member>
        <member name="P:FileCabinetApp.CommandHandlers.AppCommandRequest.Parameters">
            <summary>
            Gets parameters value.
            </summary>
            <value>Parameters value.</value>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.CommandHandlerBase">
            <summary>
            Abstract class for command handlers.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.CommandHandlerBase.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles command line request.
            </summary>
            <param name="commandRequest">Command line request.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.CommandHandlerBase.SetNext(FileCabinetApp.CommandHandlers.ICommandHandler)">
            <summary>
            Sets next command handler.
            </summary>
            <param name="commandHandler">Command handler to set.</param>
            <returns>This command handler.</returns>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.CreateCommandHandler">
            <summary>
            Command handler to create method.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.CreateCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.CreateCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">File cabinet service to call.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.CreateCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles command line request.
            </summary>
            <param name="commandRequest">Command line request.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.DeleteCommandHandler">
            <summary>
            Command handler to delete method.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.DeleteCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.DeleteCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">File cabinet service to call.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.DeleteCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles command line request.
            </summary>
            <param name="commandRequest">Command line request.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.EditCommandHandler">
            <summary>
            Command handler to edit method.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.EditCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.EditCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">File cabinet service to call.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.EditCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles command line request.
            </summary>
            <param name="commandRequest">Command line request.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ExitCommandHandler">
            <summary>
            Command handler to exit method.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExitCommandHandler.#ctor(System.Action{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ExitCommandHandler"/> class.
            </summary>
            <param name="action">Delegate to invoke.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExitCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles command line request.
            </summary>
            <param name="commandRequest">Command line request.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ExportCommandHandler">
            <summary>
            Command handler to export method.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExportCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ExportCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">File cabinet service to call.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExportCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles command line request.
            </summary>
            <param name="commandRequest">Command line request.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.FindCommandHandler">
            <summary>
            Command handler to find method.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.FindCommandHandler.#ctor(FileCabinetApp.IFileCabinetService,System.Action{System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord}})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.FindCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">File cabinet service to call.</param>
            <param name="printer">Printer to records.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.FindCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles command line request.
            </summary>
            <param name="commandRequest">Command line request.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.HelpCommandHandler">
            <summary>
            Command handler to help method.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.HelpCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles command line request.
            </summary>
            <param name="commandRequest">Command line request.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ICommandHandler">
            <summary>
            Provides methods to command handlers.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ICommandHandler.SetNext(FileCabinetApp.CommandHandlers.ICommandHandler)">
            <summary>
            Sets next command handler.
            </summary>
            <param name="commandHandler">Command handler to set.</param>
            <returns>This command handler.</returns>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ICommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles command line request.
            </summary>
            <param name="commandRequest">Command line request.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ImportCommandHandler">
            <summary>
            Command handler to import method.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ImportCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ImportCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">File cabinet service to call.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ImportCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles command line request.
            </summary>
            <param name="commandRequest">Command line request.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.InsertCommandHandler">
            <summary>
            Command handler to insert method.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.InsertCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.InsertCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">File cabinet service to call.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.InsertCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles command line request.
            </summary>
            <param name="commandRequest">Command line request.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ListCommandHandler">
            <summary>
            Command handler to list method.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ListCommandHandler.#ctor(FileCabinetApp.IFileCabinetService,System.Action{System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord}})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ListCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">File cabinet service to call.</param>
            <param name="printer">Printer to records.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ListCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles command line request.
            </summary>
            <param name="commandRequest">Command line request.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.PurgeCommandHandler">
            <summary>
            Command handler to purge method.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.PurgeCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.PurgeCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">File cabinet service to call.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.PurgeCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles command line request.
            </summary>
            <param name="commandRequest">Command line request.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.RemoveCommandHandler">
            <summary>
            Command handler to remove method.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.RemoveCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.RemoveCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">File cabinet service to call.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.RemoveCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles command line request.
            </summary>
            <param name="commandRequest">Command line request.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase">
            <summary>
            Abstract class for service dependent handlers.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase"/> class.
            </summary>
            <param name="fileCabinetService">File cabinet service to call.</param>
        </member>
        <member name="P:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.Service">
            <summary>
            Gets file cabinet service.
            </summary>
            <value>Value of file cabinet service.</value>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles command line request.
            </summary>
            <param name="commandRequest">Command line request.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.StatCommandHandler">
            <summary>
            Command handler to stat method.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.StatCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.StatCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">File cabinet service to call.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.StatCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles command line request.
            </summary>
            <param name="commandRequest">Command line request.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.UpdateCommandHandler">
            <summary>
            Command handler to update method.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.UpdateCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.UpdateCommandHandler"/> class.
            </summary>
            <param name="fileCabinetService">File cabinet service to call.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.UpdateCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Handles command line request.
            </summary>
            <param name="commandRequest">Command line request.</param>
        </member>
        <member name="T:FileCabinetApp.Converter">
            <summary>
            Converter to values.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Converter.ConvertStringToDateTime(System.String)">
            <summary>
            Converts string to date.
            </summary>
            <param name="input">String to convert.</param>
            <returns>Whether convertion was succesfull, reason of fail and result.</returns>
        </member>
        <member name="M:FileCabinetApp.Converter.ConvertStringToShort(System.String)">
            <summary>
            Converts string to short.
            </summary>
            <param name="input">String to convert.</param>
            <returns>Whether convertion was succesfull, reason of fail and result.</returns>
        </member>
        <member name="M:FileCabinetApp.Converter.ConvertStringToDecimal(System.String)">
            <summary>
            Converts string to decimal.
            </summary>
            <param name="input">String to convert.</param>
            <returns>Whether convertion was succesfull, reason of fail and result.</returns>
        </member>
        <member name="M:FileCabinetApp.Converter.ConvertStringToChar(System.String)">
            <summary>
            Converts string to char.
            </summary>
            <param name="input">String to convert.</param>
            <returns>Whether convertion was succesfull, reason of fail and result.</returns>
        </member>
        <member name="M:FileCabinetApp.Converter.ConvertStringToInt(System.String)">
            <summary>
            Converts string to int.
            </summary>
            <param name="input">String to convert.</param>
            <returns>Whether convertion was succesfull, reason of fail and result.</returns>
        </member>
        <member name="M:FileCabinetApp.Converter.ConvertStringToString(System.String)">
            <summary>
            Converts string to string.
            </summary>
            <param name="input">String to convert.</param>
            <returns>Whether convertion was succesfull, reason of fail and result.</returns>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecord">
            <summary>
            Provides type to describe a record.
            </summary>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Id">
            <summary>
            Gets or sets unique ID of a record.
            </summary>
            <value>Value of ID of a record.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.FirstName">
            <summary>
            Gets or sets first name of record subject.
            </summary>
            <value>Value of first name of a record.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.LastName">
            <summary>
            Gets or sets last name of record subject.
            </summary>
            <value>Value of last name of a record.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.DateOfBirth">
            <summary>
            Gets or sets date of birth of record subject.
            </summary>
            <value>Value of date of birth of a record.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Height">
            <summary>
            Gets or sets height of record subject.
            </summary>
            <value>Value of height of a record.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Income">
            <summary>
            Gets or sets income of record subject.
            </summary>
            <value>Value of income of a record.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.PatronymicLetter">
            <summary>
            Gets or sets patronymic letter of record subject.
            </summary>
            <value>Value of patronymic letter of a record.</value>
        </member>
        <member name="T:FileCabinetApp.FileCabinetServiceSnapshot">
            <summary>
            Provides methods to save records into csv or xml.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetServiceSnapshot"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.#ctor(FileCabinetApp.FileCabinetRecord[])">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetServiceSnapshot"/> class.
            </summary>
            <param name="records">Records to save.</param>
        </member>
        <member name="P:FileCabinetApp.FileCabinetServiceSnapshot.GetRecords">
            <summary>
            Gets records as readonly collection.
            </summary>
            <value>Readonly collection of records.</value>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.SaveToCsv(System.IO.StreamWriter)">
            <summary>
            Saves records to csv file.
            </summary>
            <param name="writer">Streamwriter to save records.</param>
            <exception cref="T:System.ArgumentNullException">Writer must be not null.</exception>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.SaveToXml(System.Xml.XmlWriter)">
            <summary>
            Saves records to xml file.
            </summary>
            <param name="writer">Streamwriter to save records.</param>
            <exception cref="T:System.ArgumentNullException">Writer must be not null.</exception>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.LoadFromCsv(System.IO.StreamReader)">
            <summary>
            Gets records from csv.
            </summary>
            <param name="streamReader">Stream reader to get records.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.LoadFromXml(System.Xml.XmlReader)">
            <summary>
            Gets records from xml.
            </summary>
            <param name="xmlReader">Xml reader to get records.</param>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordsXmlModel">
            <summary>
            Model of filecabinet records.
            </summary>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecordsXmlModel.Records">
            <summary>
            Gets or sets array of records.
            </summary>
            <value>Array of records.</value>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordXmlModel">
            <summary>
            Record xml model.
            </summary>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecordXmlModel.Id">
            <summary>
            Gets or sets ID.
            </summary>
            <value>ID.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecordXmlModel.Name">
            <summary>
            Gets or sets name.
            </summary>
            <value>Name.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecordXmlModel.DateOfBirth">
            <summary>
            Gets or sets date of birth.
            </summary>
            <value>Date of birth.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecordXmlModel.PatronymicLetter">
            <summary>
            Gets or sets patronymic letter.
            </summary>
            <value>Patronymic letter.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecordXmlModel.Income">
            <summary>
            Gets or sets patronymic income.
            </summary>
            <value>Income.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecordXmlModel.Height">
            <summary>
            Gets or sets patronymic height.
            </summary>
            <value>Height.</value>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordXmlName">
            <summary>
            Name xml model.
            </summary>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecordXmlName.FirstName">
            <summary>
            Gets or sets first name.
            </summary>
            <value>First name.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecordXmlName.LastName">
            <summary>
            Gets or sets last name.
            </summary>
            <value>Last name.</value>
        </member>
        <member name="T:FileCabinetApp.Options">
            <summary>
            Command line options.
            </summary>
        </member>
        <member name="P:FileCabinetApp.Options.Rule">
            <summary>
            Gets or sets type of validation rules.
            </summary>
            <value>Type of validation rules.</value>
        </member>
        <member name="P:FileCabinetApp.Options.Storage">
            <summary>
            Gets or sets type of storage.
            </summary>
            <value>Type of storage.</value>
        </member>
        <member name="P:FileCabinetApp.Options.Stopwatch">
            <summary>
            Gets or sets a value indicating whether stopwatch is using or not.
            </summary>
            <value>Whether stopwatch are using or not.</value>
        </member>
        <member name="P:FileCabinetApp.Options.Logger">
            <summary>
            Gets or sets a value indicating whether stopwatch is using or not.
            </summary>
            <value>Whether stopwatch is using or not.</value>
        </member>
        <member name="T:FileCabinetApp.Printers.DefaultPrinter">
            <summary>
            Default printer for records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Printers.DefaultPrinter.Print(System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord})">
            <summary>
            Prints records.
            </summary>
            <param name="records">Records to print.</param>
        </member>
        <member name="T:FileCabinetApp.Printers.IRecordPrinter">
            <summary>
            Provides methods to print records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Printers.IRecordPrinter.Print(System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord})">
            <summary>
            Prints records.
            </summary>
            <param name="records">Records to print.</param>
        </member>
        <member name="T:FileCabinetApp.Program">
            <summary>
            API class of the program.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Program.Main(System.String[])">
            <summary>
            Point of entrance to program.
            </summary>
            <param name="args">Command prompt arguments.</param>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordCsvReader">
            <summary>
            Reader of csv records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvReader.#ctor(System.IO.StreamReader)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetRecordCsvReader"/> class.
            </summary>
            <param name="fileReader">File reader.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvReader.ReadAll">
            <summary>
            Reads all strings from xml file.
            </summary>
            <returns>List of records.</returns>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordXmlReader">
            <summary>
            Xml reader of filecabinet records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlReader.#ctor(System.Xml.XmlReader)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetRecordXmlReader"/> class.
            </summary>
            <param name="xmlReader">Xml reader.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlReader.ReadAll">
            <summary>
            Reads all strings from xml file.
            </summary>
            <returns>List of records.</returns>
        </member>
        <member name="T:FileCabinetApp.RecordParametersTransfer">
            <summary>
            Parameters transition class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.RecordParametersTransfer.#ctor(System.String,System.String,System.DateTime,System.Int16,System.Decimal,System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.RecordParametersTransfer"/> class.
            </summary>
            <param name="firstName">First name parameter to transfer.</param>
            <param name="lastName">Last name parameter to transfer.</param>
            <param name="dateOfBirth">Date of birth parameter to transfer.</param>
            <param name="height">Height parameter to transfer.</param>
            <param name="income">Income parameter to transfer.</param>
            <param name="patronymicLetter">Patronymic letter parameter to transfer.</param>
        </member>
        <member name="P:FileCabinetApp.RecordParametersTransfer.FirstName">
            <summary>
            Gets first name to transfer.
            </summary>
            <value>Value of first name to transfer.</value>
        </member>
        <member name="P:FileCabinetApp.RecordParametersTransfer.LastName">
            <summary>
            Gets last name to transfer.
            </summary>
            <value>Value of last name to transfer.</value>
        </member>
        <member name="P:FileCabinetApp.RecordParametersTransfer.DateOfBirth">
            <summary>
            Gets date of birth to transfer.
            </summary>
            <value>Value of date of birth to transfer.</value>
        </member>
        <member name="P:FileCabinetApp.RecordParametersTransfer.Height">
            <summary>
            Gets height to transfer.
            </summary>
            <value>Value of height to transfer.</value>
        </member>
        <member name="P:FileCabinetApp.RecordParametersTransfer.Income">
            <summary>
            Gets income to transfer.
            </summary>
            <value>Value of income to transfer.</value>
        </member>
        <member name="P:FileCabinetApp.RecordParametersTransfer.PatronymicLetter">
            <summary>
            Gets patronymic letter to transfer.
            </summary>
            <value>Value of patronymic letter to transfer.</value>
        </member>
        <member name="M:FileCabinetApp.RecordParametersTransfer.RecordSimulation">
            <summary>
            Simulates record from transfer.
            </summary>
            <returns>Simulation of record.</returns>
        </member>
        <member name="T:FileCabinetApp.FileCabinetFilesystemService">
            <summary>
            Works woth records using file system.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.#ctor(System.IO.FileStream)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetFilesystemService"/> class.
            </summary>
            <param name="fileStream">Stream to work with file.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when stream is null.</exception>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.#ctor(System.IO.FileStream,FileCabinetApp.IRecordValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetFilesystemService"/> class.
            </summary>
            <param name="fileStream">Stream to work with file.</param>
            <param name="recordValidator">Validation rules.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when stream is null.</exception>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.CreateRecord(FileCabinetApp.RecordParametersTransfer)">
            <summary>
            Creates new records with given parameters.
            </summary>
            <param name="transfer">Object to transfer parameters of new record.</param>
            <returns>ID of created record.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when transfer parameters is null.</exception>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Insert(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Inserts new record.
            </summary>
            <param name="record">Record to insert.</param>
            <returns>Id of inserted record.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.EditRecord(System.Int32,FileCabinetApp.RecordParametersTransfer)">
            <summary>
            Edits existing record.
            </summary>
            <param name="id">ID of a record to edit.</param>
            <param name="transfer">Object to transfer new parameters to existing record.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when transfer parameters is null.</exception>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FindByDateOfbirth(System.DateTime)">
            <summary>
            Finds all records with given date of birth.
            </summary>
            <param name="dateOfBirth">Date of birth name to match with.</param>
            <returns>Array of matching records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FindByFirstName(System.String)">
            <summary>
            Finds all records with given first name.
            </summary>
            <param name="firstName">First name to match with.</param>
            <returns>Array of matching records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FindByLastName(System.String)">
            <summary>
            Finds all records with given last name.
            </summary>
            <param name="lastName">Last name to match with.</param>
            <returns>Array of matching records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.GetRecords">
            <summary>
            Gets all existing records.
            </summary>
            <returns>Readonly collection of all existing records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.GetStat">
            <summary>
            Counts amount of existing records.
            </summary>
            <returns>Amount of existing records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.MakeSnapshot">
            <summary>
            Creates a snapshot of all records in current moment.
            </summary>
            <returns>Snapshot of records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Dispose">
            <summary>
            Dispose service.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Restore(FileCabinetApp.FileCabinetServiceSnapshot)">
            <summary>
            Restores statement from snapshot.
            </summary>
            <param name="snapshot">Snapshot that represent statement to restore.</param>
            <returns>Amount of new records added.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.SetRecordValidator(FileCabinetApp.IRecordValidator)">
            <summary>
            Sets record validator.
            </summary>
            <param name="recordValidator">Rules of validation.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Delete(System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord})">
            <summary>
            Deletes records.
            </summary>
            <param name="records">Records to delete.</param>
            <returns>IDs of deleted records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Remove(System.Int32)">
            <summary>
            Removes record by given id.
            </summary>
            <param name="id">ID of record to remove.</param>
            <returns>Whether record existed or not.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Purge">
            <summary>
            Defragments file.
            </summary>
            <returns>Amount of purged records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Update(System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord},System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})">
            <summary>
            Updates records.
            </summary>
            <param name="records">Records to update.</param>
            <param name="fieldsAndValuesToSet">Fields and values to set.</param>
            <returns>Amount of updated records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Dispose(System.Boolean)">
            <summary>
            If service is disposing, close streams.
            </summary>
            <param name="disposing">If service is disposing.</param>
        </member>
        <member name="T:FileCabinetApp.FileCabinetMemoryService">
            <summary>
            Provides methods to interact with records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.#ctor(FileCabinetApp.IRecordValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetMemoryService"/> class.
            </summary>
            <param name="recordValidator">Validator for parameters.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetMemoryService"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.CreateRecord(FileCabinetApp.RecordParametersTransfer)">
            <summary>
            Creates new records with given parameters.
            </summary>
            <param name="transfer">Object to transfer parameters of new record.</param>
            <returns>ID of created record.</returns>
            <exception cref="T:System.ArgumentNullException">Throw when first name or last name is null, when transfer object is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when firs name or last name length is out of 2 and 60 chars or contains only whitespaces, when date of birth out of 01-Jan-1950 and current date, when height is out of 1 and 300 cm, when income is negative, when patronymic letter is not a latin uppercase letter.</exception>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.EditRecord(System.Int32,FileCabinetApp.RecordParametersTransfer)">
            <summary>
            Edits existing record.
            </summary>
            <param name="id">ID of a record to edit.</param>
            <param name="transfer">Object to transfer new parameters to existing record.</param>
            <exception cref="T:System.ArgumentNullException">Throw when first name or last name is null, when transfer object is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when firs name or last name length is out of 2 and 60 chars or contains only whitespaces, when date of birth out of 01-Jan-1950 and current date, when height is out of 1 and 300 cm, when income is negative, when patronymic letter is not a latin uppercase letter.</exception>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.GetRecords">
            <summary>
            Gets all existing records.
            </summary>
            <returns>Array of all existing records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.GetStat">
            <summary>
            Counts amount of existing records.
            </summary>
            <returns>Amount of existing records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.FindByFirstName(System.String)">
            <summary>
            Finds all records with given first name.
            </summary>
            <param name="firstName">First name to match with.</param>
            <returns>Array of matching records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.FindByLastName(System.String)">
            <summary>
            Finds all records with given last name.
            </summary>
            <param name="lastName">Last name to match with.</param>
            <returns>Array of matching records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.FindByDateOfbirth(System.DateTime)">
            <summary>
            Finds all records with given date of birth.
            </summary>
            <param name="dateOfBirth">Date of birth to match with.</param>
            <returns>Array of matching records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.MakeSnapshot">
            <summary>
            Creates a snapshot of all records in current moment.
            </summary>
            <returns>Snapshot of records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.Delete(System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord})">
            <summary>
            Deletes records.
            </summary>
            <param name="records">Records to delete.</param>
            <returns>IDs of deleted records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.Remove(System.Int32)">
            <summary>
            Removes record by given id.
            </summary>
            <param name="id">ID of record to remove.</param>
            <returns>Whether record existed or not.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.Insert(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Inserts new record.
            </summary>
            <param name="record">Record to insert.</param>
            <returns>Id of inserted record.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.Restore(FileCabinetApp.FileCabinetServiceSnapshot)">
            <summary>
            Restores statement from snapshot.
            </summary>
            <param name="snapshot">Snapshot that represent statement to restore.</param>
            <returns>Amount of new records added.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.SetRecordValidator(FileCabinetApp.IRecordValidator)">
            <summary>
            Sets record validator.
            </summary>
            <param name="recordValidator">Rules of validation.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.Purge">
            <summary>
            Defragments file.
            </summary>
            <returns>Amount of purged records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.Update(System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord},System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})">
            <summary>
            Updates records.
            </summary>
            <param name="records">Records to update.</param>
            <param name="fieldsAndValuesToSet">Fields and values to set.</param>
            <returns>Amount of updated records.</returns>
        </member>
        <member name="T:FileCabinetApp.IFileCabinetService">
            <summary>
            Provides methods to interact with records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.CreateRecord(FileCabinetApp.RecordParametersTransfer)">
            <summary>
            Creates new records with given parameters.
            </summary>
            <param name="transfer">Object to transfer parameters of new record.</param>
            <returns>ID of created record.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.EditRecord(System.Int32,FileCabinetApp.RecordParametersTransfer)">
            <summary>
            Edits existing record.
            </summary>
            <param name="id">ID of a record to edit.</param>
            <param name="transfer">Object to transfer new parameters to existing record.</param>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.SetRecordValidator(FileCabinetApp.IRecordValidator)">
            <summary>
            Sets record validator.
            </summary>
            <param name="recordValidator">Rules of validation.</param>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.MakeSnapshot">
            <summary>
            Creates a snapshot of all records in current moment.
            </summary>
            <returns>Snapshot of records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.FindByDateOfbirth(System.DateTime)">
            <summary>
            Finds all records with given date of birth.
            </summary>
            <param name="dateOfBirth">Date of birth to match with.</param>
            <returns>Array of matching records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.FindByFirstName(System.String)">
            <summary>
            Finds all records with given first name.
            </summary>
            <param name="firstName">First name to match with.</param>
            <returns>Array of matching records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.FindByLastName(System.String)">
            <summary>
            Finds all records with given last name.
            </summary>
            <param name="lastName">Last name to match with.</param>
            <returns>Array of matching records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.GetRecords">
            <summary>
            Gets all existing records.
            </summary>
            <returns>Array of all existing records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.GetStat">
            <summary>
            Counts amount of existing records.
            </summary>
            <returns>Amount of existing and removed records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.Restore(FileCabinetApp.FileCabinetServiceSnapshot)">
            <summary>
            Restores statement from snapshot.
            </summary>
            <param name="snapshot">Snapshot that represent statement to restore.</param>
            <returns>Amount of new records added.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.Remove(System.Int32)">
            <summary>
            Removes record by given id.
            </summary>
            <param name="id">ID of record to remove.</param>
            <returns>Whether records existed or not.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.Purge">
            <summary>
            Defragments file.
            </summary>
            <returns>Amount of purged records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.Insert(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Inserts new record.
            </summary>
            <param name="record">Record to insert.</param>
            <returns>Id of inserted record.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.Delete(System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord})">
            <summary>
            Deletes records.
            </summary>
            <param name="records">Records to delete.</param>
            <returns>IDs of deleted records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.Update(System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord},System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})">
            <summary>
            Updates records.
            </summary>
            <param name="records">Records to update.</param>
            <param name="fieldsAndValuesToSet">Fields and values to set.</param>
            <returns>Amount of updated records.</returns>
        </member>
        <member name="T:FileCabinetApp.Services.ServiceLogger">
            <summary>
            Provides methods to interact with records and writes info to log file.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceLogger.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Services.ServiceLogger"/> class.
            </summary>
            <param name="service">Service to decorate.</param>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceLogger.CreateRecord(FileCabinetApp.RecordParametersTransfer)">
            <summary>
            Creates new records with given parameters and writes info to log file.
            </summary>
            <param name="transfer">Object to transfer parameters of new record.</param>
            <returns>ID of created record.</returns>
            <exception cref="T:System.ArgumentNullException">Throw when first name or last name is null, when transfer object is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when firs name or last name length is out of 2 and 60 chars or contains only whitespaces, when date of birth out of 01-Jan-1950 and current date, when height is out of 1 and 300 cm, when income is negative, when patronymic letter is not a latin uppercase letter.</exception>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceLogger.EditRecord(System.Int32,FileCabinetApp.RecordParametersTransfer)">
            <summary>
            Edits existing record and writes info to log file.
            </summary>
            <param name="id">ID of a record to edit.</param>
            <param name="transfer">Object to transfer new parameters to existing record.</param>
            <exception cref="T:System.ArgumentNullException">Throw when first name or last name is null, when transfer object is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when firs name or last name length is out of 2 and 60 chars or contains only whitespaces, when date of birth out of 01-Jan-1950 and current date, when height is out of 1 and 300 cm, when income is negative, when patronymic letter is not a latin uppercase letter.</exception>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceLogger.FindByDateOfbirth(System.DateTime)">
            <summary>
            Finds all records with given date of birth and writes info to log file.
            </summary>
            <param name="dateOfBirth">Date of birth to match with.</param>
            <returns>Array of matching records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceLogger.FindByFirstName(System.String)">
            <summary>
            Finds all records with given first name and writes info to log file.
            </summary>
            <param name="firstName">First name to match with.</param>
            <returns>Array of matching records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceLogger.FindByLastName(System.String)">
            <summary>
            Finds all records with given last name and writes info to log file.
            </summary>
            <param name="lastName">Last name to match with.</param>
            <returns>Array of matching records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceLogger.GetRecords">
            <summary>
            Gets all existing records and writes info to log file.
            </summary>
            <returns>Array of all existing records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceLogger.GetStat">
            <summary>
            Counts amount of existing records and writes info to log file.
            </summary>
            <returns>Amount of existing records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceLogger.MakeSnapshot">
            <summary>
            Creates a snapshot of all records in current moment and writes info to log file.
            </summary>
            <returns>Snapshot of records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceLogger.Purge">
            <summary>
            Defragments file and writes info to log file.
            </summary>
            <returns>Amount of purged records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceLogger.Delete(System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord})">
            <summary>
            Deletes records and writes info to log file.
            </summary>
            <param name="records">Records to delete.</param>
            <returns>IDs of deleted records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceLogger.Remove(System.Int32)">
            <summary>
            Removes record by given id and writes info to log file.
            </summary>
            <param name="id">ID of record to remove.</param>
            <returns>Whether record existed or not.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceLogger.Restore(FileCabinetApp.FileCabinetServiceSnapshot)">
            <summary>
            Restores statement from snapshot and writes info to log file.
            </summary>
            <param name="snapshot">Snapshot that represent statement to restore.</param>
            <returns>Amount of new records added.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceLogger.Insert(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Inserts new record and writes info to log file.
            </summary>
            <param name="record">Record to insert.</param>
            <returns>Id of inserted record.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceLogger.Update(System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord},System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})">
            <summary>
            Updates records.
            </summary>
            <param name="records">Records to update.</param>
            <param name="fieldsAndValuesToSet">Fields and values to set.</param>
            <returns>Amount of updated records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceLogger.Dispose">
            <summary>
            Closes streamwriter.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceLogger.SetRecordValidator(FileCabinetApp.IRecordValidator)">
            <summary>
            Sets record validator.
            </summary>
            <param name="recordValidator">Rules of validation.</param>
        </member>
        <member name="T:FileCabinetApp.Services.ServiceMeter">
            <summary>
            Provides methods to interact with records and measure execution time.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceMeter.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Services.ServiceMeter"/> class.
            </summary>
            <param name="service">Service to decorate.</param>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceMeter.CreateRecord(FileCabinetApp.RecordParametersTransfer)">
            <summary>
            Creates new records with given parameters and measure execution time.
            </summary>
            <param name="transfer">Object to transfer parameters of new record.</param>
            <returns>ID of created record.</returns>
            <exception cref="T:System.ArgumentNullException">Throw when first name or last name is null, when transfer object is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when firs name or last name length is out of 2 and 60 chars or contains only whitespaces, when date of birth out of 01-Jan-1950 and current date, when height is out of 1 and 300 cm, when income is negative, when patronymic letter is not a latin uppercase letter.</exception>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceMeter.EditRecord(System.Int32,FileCabinetApp.RecordParametersTransfer)">
            <summary>
            Edits existing record and measure execution time.
            </summary>
            <param name="id">ID of a record to edit.</param>
            <param name="transfer">Object to transfer new parameters to existing record.</param>
            <exception cref="T:System.ArgumentNullException">Throw when first name or last name is null, when transfer object is null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when firs name or last name length is out of 2 and 60 chars or contains only whitespaces, when date of birth out of 01-Jan-1950 and current date, when height is out of 1 and 300 cm, when income is negative, when patronymic letter is not a latin uppercase letter.</exception>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceMeter.FindByDateOfbirth(System.DateTime)">
            <summary>
            Finds all records with given date of birth and measure execution time.
            </summary>
            <param name="dateOfBirth">Date of birth to match with.</param>
            <returns>Array of matching records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceMeter.FindByFirstName(System.String)">
            <summary>
            Finds all records with given first name and measure execution time.
            </summary>
            <param name="firstName">First name to match with.</param>
            <returns>Array of matching records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceMeter.FindByLastName(System.String)">
            <summary>
            Finds all records with given last name and measure execution time.
            </summary>
            <param name="lastName">Last name to match with.</param>
            <returns>Array of matching records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceMeter.GetRecords">
            <summary>
            Gets all existing records and measure execution time.
            </summary>
            <returns>Array of all existing records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceMeter.GetStat">
            <summary>
            Counts amount of existing records and measure execution time.
            </summary>
            <returns>Amount of existing records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceMeter.Insert(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Inserts new record and measure execution time.
            </summary>
            <param name="record">Record to insert.</param>
            <returns>Id of inserted record.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceMeter.MakeSnapshot">
            <summary>
            Creates a snapshot of all records in current moment and measure execution time.
            </summary>
            <returns>Snapshot of records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceMeter.Purge">
            <summary>
            Defragments file and measure execution time.
            </summary>
            <returns>Amount of purged records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceMeter.Delete(System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord})">
            <summary>
            Deletes records and measure execution time.
            </summary>
            <param name="records">Records to delete.</param>
            <returns>IDs of deleted records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceMeter.Remove(System.Int32)">
            <summary>
            Removes record by given id and measure execution time.
            </summary>
            <param name="id">ID of record to remove.</param>
            <returns>Whether record existed or not.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceMeter.Restore(FileCabinetApp.FileCabinetServiceSnapshot)">
            <summary>
            Restores statement from snapshot and measure execution time.
            </summary>
            <param name="snapshot">Snapshot that represent statement to restore.</param>
            <returns>Amount of new records added.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceMeter.Update(System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord},System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})">
            <summary>
            Updates records.
            </summary>
            <param name="records">Records to update.</param>
            <param name="fieldsAndValuesToSet">Fields and values to set.</param>
            <returns>Amount of updated records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceMeter.SetRecordValidator(FileCabinetApp.IRecordValidator)">
            <summary>
            Sets record validator.
            </summary>
            <param name="recordValidator">Rules of validation.</param>
        </member>
        <member name="T:FileCabinetApp.Validators.CompositeValidator">
            <summary>
            Composition of record validators.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.CompositeValidator.#ctor(System.Collections.Generic.IEnumerable{FileCabinetApp.IRecordValidator})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.CompositeValidator"/> class.
            </summary>
            <param name="validators">Validators to compose.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when validators sequence is null.</exception>
        </member>
        <member name="M:FileCabinetApp.Validators.CompositeValidator.ValidateParameters(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Validate given record.
            </summary>
            <param name="record">Record to validate.</param>
            <returns>Whether validation was succesful and reason of fail.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when record is null.</exception>
        </member>
        <member name="T:FileCabinetApp.Validators.DateOfBirthValidator">
            <summary>
            Date of birth validator.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.DateOfBirthValidator.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.DateOfBirthValidator"/> class.
            </summary>
            <param name="from">Min value of date of birth.</param>
            <param name="to">Max value of date of birth.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.DateOfBirthValidator.ValidateParameters(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Validate given record.
            </summary>
            <param name="record">Record to validate.</param>
            <returns>Whether validation was succesful and reason of fail.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when record is null.</exception>
        </member>
        <member name="T:FileCabinetApp.Validators.FirstNameValidator">
            <summary>
            First name validator.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.FirstNameValidator.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.FirstNameValidator"/> class.
            </summary>
            <param name="minLength">Min length of first name.</param>
            <param name="maxLength">Max length of first name.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.FirstNameValidator.ValidateParameters(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Validate given record.
            </summary>
            <param name="record">Record to validate.</param>
            <returns>Whether validation was succesful and reason of fail.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when record is null.</exception>
        </member>
        <member name="T:FileCabinetApp.Validators.HeightValidator">
            <summary>
            Height validator.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.HeightValidator.#ctor(System.Int16,System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.HeightValidator"/> class.
            </summary>
            <param name="minHeight">Min height.</param>
            <param name="maxHeight">Max height.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.HeightValidator.ValidateParameters(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Validate given record.
            </summary>
            <param name="record">Record to validate.</param>
            <returns>Whether validation was succesful and reason of fail.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when record is null.</exception>
        </member>
        <member name="T:FileCabinetApp.Validators.IncomeValidator">
            <summary>
            Income validator.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.IncomeValidator.#ctor(System.Decimal,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.IncomeValidator"/> class.
            </summary>
            <param name="from">Min income.</param>
            <param name="to">Max income.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.IncomeValidator.ValidateParameters(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Validate given record.
            </summary>
            <param name="record">Record to validate.</param>
            <returns>Whether validation was succesful and reason of fail.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when record is null.</exception>
        </member>
        <member name="T:FileCabinetApp.Validators.LastNameValidator">
            <summary>
            Last name validator.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.LastNameValidator.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.LastNameValidator"/> class.
            </summary>
            <param name="minLength">Min length of last name.</param>
            <param name="maxLength">Max length of last name.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.LastNameValidator.ValidateParameters(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Validate given record.
            </summary>
            <param name="record">Record to validate.</param>
            <returns>Whether validation was succesful and reason of fail.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when record is null.</exception>
        </member>
        <member name="T:FileCabinetApp.Validators.PatronymicValidator">
            <summary>
            Patronymic letter validator.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.PatronymicValidator.#ctor(System.Char,System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Validators.PatronymicValidator"/> class.
            </summary>
            <param name="from">Min char.</param>
            <param name="to">Max char.</param>
        </member>
        <member name="M:FileCabinetApp.Validators.PatronymicValidator.ValidateParameters(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Validate given record.
            </summary>
            <param name="record">Record to validate.</param>
            <returns>Whether validation was succesful and reason of fail.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when record is null.</exception>
        </member>
        <member name="T:FileCabinetApp.Validators.ValidatorBuilder">
            <summary>
            Validator builder.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.ValidateFirstName(System.Int32,System.Int32)">
            <summary>
            Adds first name validation.
            </summary>
            <param name="minLength">Min length of first name.</param>
            <param name="maxLength">Max length of first name.</param>
            <returns>Validator builder.</returns>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.ValidateLastName(System.Int32,System.Int32)">
            <summary>
            Adds last name validation.
            </summary>
            <param name="minLength">Min length of last name.</param>
            <param name="maxLength">Max length of last name.</param>
            <returns>Validator builder.</returns>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.ValidateDateOfBirth(System.DateTime,System.DateTime)">
            <summary>
            Adds date of birth validation.
            </summary>
            <param name="from">Min value of date of birth.</param>
            <param name="to">Max value of date of birth.</param>
            <returns>Validator builder.</returns>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.ValidatePatronymic(System.Char,System.Char)">
            <summary>
            Adds patronymic letter validation.
            </summary>
            <param name="from">Min char.</param>
            <param name="to">Max char.</param>
            <returns>Validator builder.</returns>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.ValidateIncome(System.Decimal,System.Decimal)">
            <summary>
            Adds income validation.
            </summary>
            <param name="from">Min income.</param>
            <param name="to">Max income.</param>
            <returns>Validator builder.</returns>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.ValidateHeight(System.Int16,System.Int16)">
            <summary>
            Adds height validation.
            </summary>
            <param name="min">Min height.</param>
            <param name="max">Max height.</param>
            <returns>Validator builder.</returns>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilder.Create">
            <summary>
            Creates composite validator.
            </summary>
            <returns>Composite validator.</returns>
        </member>
        <member name="T:FileCabinetApp.Validators.ValidatorBuilderExtension">
            <summary>
            Provides extensions for validator builder.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Validators.ValidatorBuilderExtension.CreateValidator(FileCabinetApp.Validators.ValidatorBuilder,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Creates composite validator based on configuration.
            </summary>
            <param name="validatorBuilder">Builder to create composite validator.</param>
            <param name="configuration">Configuration to create validator.</param>
            <returns>Composite validator.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when validator builder is null.</exception>
        </member>
        <member name="T:FileCabinetApp.IRecordValidator">
            <summary>
            Interface to make validation of some parameters.
            </summary>
        </member>
        <member name="M:FileCabinetApp.IRecordValidator.ValidateParameters(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Validate given record.
            </summary>
            <param name="record">Record to validate.</param>
            <returns>Whether validation was succesful and reason of fail.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when record is null.</exception>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordCsvWriter">
            <summary>
            Provides methods to write records into csv.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetRecordCsvWriter"/> class.
            </summary>
            <param name="writer">Streamwriter to save records.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvWriter.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:FileCabinetApp.FileCabinetRecordCsvWriter"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvWriter.Dispose">
            <summary>
            Provides disposing of an object.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvWriter.Write(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Writes a record into current stream.
            </summary>
            <param name="record">Record to write.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvWriter.Dispose(System.Boolean)">
            <summary>
            Provides disposing of an object.
            </summary>
            <param name="disposing">If object is disposing or not.</param>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordXmlWriter">
            <summary>
            Provides methods to write records into xml.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlWriter.#ctor(System.Xml.XmlWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetRecordXmlWriter"/> class.
            </summary>
            <param name="writer">Streamwriter to save records.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlWriter.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:FileCabinetApp.FileCabinetRecordXmlWriter"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlWriter.Dispose">
            <summary>
            Provides disposing of an object.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlWriter.Write(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Writes a record into current stream.
            </summary>
            <param name="record">Record to write.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlWriter.Dispose(System.Boolean)">
            <summary>
            Provides disposing of an object.
            </summary>
            <param name="disposing">If object is disposing or not.</param>
        </member>
    </members>
</doc>
